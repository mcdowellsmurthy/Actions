name: Build, Dockerize, Push & Deploy

on:
 push:
 branches: [ main ]
 workflow_dispatch: {}

env:
 IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/voting

jobs:
 build-backend:
 name: Build Backend (Maven)
 runs-on: ubuntu-latest
 outputs:
 backend-built: ${{ steps.backend_outcome.outcome }}
 steps:
 - name: Checkout
 uses: actions/checkout@v4

 - name: Set up Java
 uses: actions/setup-java@v4
 with:
 distribution: temurin
 java-version: '17'

 - name: Build with Maven
 id: mvn_build
 run: |
 mvn -v
 mvn -B clean package -DskipTests
 - name: echo backend status
 id: backend_outcome
 run: echo "done"

 build-frontend:
 name: Build Frontend (Angular)
 runs-on: ubuntu-latest
 needs: build-backend
 outputs:
 frontend-built: ${{ steps.front_outcome.outcome }}
 steps:
 - name: Checkout
 uses: actions/checkout@v4

 - name: Use Node.js
 uses: actions/setup-node@v4
 with:
 node-version: '18'

 - name: Install npm deps
 run: |
 cd vote || true # change to actual frontend folder if different
 npm ci

 - name: Build Angular
 run: |
 cd vote || true
 npm run build --if-present

 - name: echo frontend status
 id: front_outcome
 run: echo "done"

 docker-build-and-push:
 name: Docker Build & Push
 runs-on: ubuntu-latest
 needs: [build-backend, build-frontend]
 steps:
 - name: Checkout repository
 uses: actions/checkout@v4

 - name: Set up QEMU (for multi-platform)
 uses: docker/setup-qemu-action@v3

 - name: Set up Docker Buildx
 uses: docker/setup-buildx-action@v3

 - name: Log in to Docker Hub
 uses: docker/login-action@v2
 with:
 username: ${{ secrets.DOCKERHUB_USERNAME }}
 password: ${{ secrets.DOCKERHUB_TOKEN }}

 - name: Build and push Docker image
 id: buildpush
 uses: docker/build-push-action@v5
 with:
 context: .
 file: ./Dockerfile # change if Dockerfile location differs
 push: true
 platforms: linux/amd64,linux/arm64
 tags: |
 ${{ env.IMAGE_NAME }}:latest
 ${{ env.IMAGE_NAME }}:${{ github.sha }}

 - name: Set image tag output
 run: echo "IMAGE=${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

 deploy-to-azure:
 name: Deploy to Azure Web App (Container)
 runs-on: ubuntu-latest
 needs: docker-build-and-push
 steps:
 - name: Azure Login
 uses: azure/login@v2
 with:
 creds: ${{ secrets.AZURE_CREDENTIALS }}

 - name: Configure Azure Web App to use container image
 run: |
 # update the web app to use the image we pushed
 az webapp config container set \
 --name ${{ secrets.AZURE_WEBAPP_NAME }} \
 --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
 --docker-custom-image-name ${{ env.IMAGE_NAME }}:${{ github.sha }} \
 --docker-registry-server-url https://index.docker.io

 - name: Restart webapp
 run: |
 az webapp restart --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}
